# Generated by Django 4.2.2 on 2023-06-29 04:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brolympics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_teams', models.PositiveIntegerField(default=0)),
                ('started', models.DateTimeField(blank=True)),
                ('ended', models.DateTimeField(blank=True)),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('type', models.CharField(choices=[('H', 'Head to Head'), ('I', 'Individual')], default='H', max_length=1)),
                ('high_score_wins', models.BooleanField(default=True)),
                ('max_score', models.IntegerField()),
                ('min_score', models.IntegerField()),
                ('n_active_limit', models.PositiveIntegerField()),
                ('concluded', models.BooleanField()),
                ('brolympics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event', to='brolympics.brolympics')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_country', models.CharField(max_length=120)),
                ('team_picture', models.ImageField(upload_to='')),
                ('score', models.PositiveIntegerField()),
                ('wins', models.PositiveIntegerField()),
                ('losses', models.PositiveIntegerField()),
                ('ties', models.PositiveIntegerField()),
                ('brolympics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team', to='brolympics.brolympics')),
                ('player_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='player_1_set', to=settings.AUTH_USER_MODEL)),
                ('player_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='player_2_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OverallBrolympicsRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.PositiveIntegerField(default=1)),
                ('total_score', models.PositiveIntegerField()),
                ('win_rate', models.PositiveIntegerField()),
                ('brolympics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overall_ranking', to='brolympics.brolympics')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brolympics.team')),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('founded', models.DateTimeField(auto_now_add=True)),
                ('league_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IndividualCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_1_score', models.IntegerField()),
                ('player_2_score', models.IntegerField()),
                ('active', models.BooleanField(default=False)),
                ('complete', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ind_comp', to='brolympics.event')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ind_competition_team', to='brolympics.team')),
            ],
        ),
        migrations.CreateModel(
            name='H2hCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_1_score', models.IntegerField()),
                ('team_2_score', models.IntegerField()),
                ('active', models.BooleanField(default=False)),
                ('complete', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h2h_comp', to='brolympics.event')),
                ('team_1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='h2h_comp_team_1', to='brolympics.team')),
                ('team_2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='h2h_comp_team_2', to='brolympics.team')),
            ],
        ),
        migrations.CreateModel(
            name='EventRanking_Individual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.PositiveIntegerField()),
                ('earned_points', models.PositiveIntegerField()),
                ('team_score', models.PositiveIntegerField()),
                ('final', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_ranking_ind', to='brolympics.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventRanking_H2H',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.PositiveIntegerField()),
                ('earned_points', models.PositiveIntegerField()),
                ('wins', models.PositiveIntegerField()),
                ('losses', models.PositiveIntegerField()),
                ('ties', models.PositiveIntegerField()),
                ('final', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_ranking_h2h', to='brolympics.event')),
            ],
        ),
        migrations.AddField(
            model_name='brolympics',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brolympics.league'),
        ),
        migrations.AddField(
            model_name='brolympics',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='brolympics.team'),
        ),
    ]
